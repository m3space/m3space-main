//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GroundControl.Gui.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// COM port name
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("COM port name")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("COM1")]
        public string ComPortRadio {
            get {
                return ((string)(this["ComPortRadio"]));
            }
            set {
                this["ComPortRadio"] = value;
            }
        }
        
        /// <summary>
        /// Data directory path
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Data directory path")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string DataDirectory {
            get {
                return ((string)(this["DataDirectory"]));
            }
            set {
                this["DataDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point MainWindowLocation {
            get {
                return ((global::System.Drawing.Point)(this["MainWindowLocation"]));
            }
            set {
                this["MainWindowLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("750, 450")]
        public global::System.Drawing.Size MainWindowSize {
            get {
                return ((global::System.Drawing.Size)(this["MainWindowSize"]));
            }
            set {
                this["MainWindowSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool MainWindowMaximized {
            get {
                return ((bool)(this["MainWindowMaximized"]));
            }
            set {
                this["MainWindowMaximized"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point TelemetryWindowLocation {
            get {
                return ((global::System.Drawing.Point)(this["TelemetryWindowLocation"]));
            }
            set {
                this["TelemetryWindowLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("260, 280")]
        public global::System.Drawing.Point LogWindowLocation {
            get {
                return ((global::System.Drawing.Point)(this["LogWindowLocation"]));
            }
            set {
                this["LogWindowLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("400, 140")]
        public global::System.Drawing.Size LogWindowSize {
            get {
                return ((global::System.Drawing.Size)(this["LogWindowSize"]));
            }
            set {
                this["LogWindowSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("165, 0")]
        public global::System.Drawing.Point MapWindowLocation {
            get {
                return ((global::System.Drawing.Point)(this["MapWindowLocation"]));
            }
            set {
                this["MapWindowLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("400, 275")]
        public global::System.Drawing.Size MapWindowSize {
            get {
                return ((global::System.Drawing.Size)(this["MapWindowSize"]));
            }
            set {
                this["MapWindowSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 280")]
        public global::System.Drawing.Point LiveImageWindowLocation {
            get {
                return ((global::System.Drawing.Point)(this["LiveImageWindowLocation"]));
            }
            set {
                this["LiveImageWindowLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("250, 140")]
        public global::System.Drawing.Size LiveImageWindowSize {
            get {
                return ((global::System.Drawing.Size)(this["LiveImageWindowSize"]));
            }
            set {
                this["LiveImageWindowSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool WebAccessEnabled {
            get {
                return ((bool)(this["WebAccessEnabled"]));
            }
            set {
                this["WebAccessEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://localhost/live/")]
        public string WebAccessUrl {
            get {
                return ((string)(this["WebAccessUrl"]));
            }
            set {
                this["WebAccessUrl"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point GraphWindowLocation {
            get {
                return ((global::System.Drawing.Point)(this["GraphWindowLocation"]));
            }
            set {
                this["GraphWindowLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("500, 200")]
        public global::System.Drawing.Size GraphWindowSize {
            get {
                return ((global::System.Drawing.Size)(this["GraphWindowSize"]));
            }
            set {
                this["GraphWindowSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("COM2")]
        public string ComPortGPS {
            get {
                return ((string)(this["ComPortGPS"]));
            }
            set {
                this["ComPortGPS"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point PredictorWindowLocation {
            get {
                return ((global::System.Drawing.Point)(this["PredictorWindowLocation"]));
            }
            set {
                this["PredictorWindowLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool TelemetryWindowVisible {
            get {
                return ((bool)(this["TelemetryWindowVisible"]));
            }
            set {
                this["TelemetryWindowVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool GraphWindowVisible {
            get {
                return ((bool)(this["GraphWindowVisible"]));
            }
            set {
                this["GraphWindowVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool LogWindowVisible {
            get {
                return ((bool)(this["LogWindowVisible"]));
            }
            set {
                this["LogWindowVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool LiveImageWindowVisible {
            get {
                return ((bool)(this["LiveImageWindowVisible"]));
            }
            set {
                this["LiveImageWindowVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MapWindowVisible {
            get {
                return ((bool)(this["MapWindowVisible"]));
            }
            set {
                this["MapWindowVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool PredictorWindowVisible {
            get {
                return ((bool)(this["PredictorWindowVisible"]));
            }
            set {
                this["PredictorWindowVisible"] = value;
            }
        }
    }
}
